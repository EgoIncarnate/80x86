#!/usr/bin/env python3
import argparse
import os
import re

from collections import defaultdict


def gather_coverage(coverage_root):
    coverage = defaultdict(int)
    for root, dirs, files in os.walk(coverage_root):
        for f in files:
            if not re.match(r'microcode_.*\.mcov', f):
                continue
            with open(os.path.join(root, f)) as covfile:
                lines = covfile.readlines()
            for l in lines:
                loc, count = l.split(':')
                coverage[int(loc, 16)] += int(count, 16)

    return coverage

def coverage_dict(microcode, coverage_root):
    cd = {}

    coverage = gather_coverage(coverage_root)
    with open(microcode) as microcode_bin:
        lines = microcode_bin.readlines()

    addr = 0
    for linenum, l in enumerate(lines):
        if l.startswith('//'):
            continue
        if l.startswith('@'):
            addr = int(l.split()[1], 16)
            continue
        cd[linenum] = (coverage[addr], l)
        addr += 1

    return cd

def report(microcode, coverage_root):
    cd = coverage_dict(microcode, coverage_root)

    for linenum, (count, line) in cd.items():
        print('%s %8d %s' % ('*' if count == 0 else ' ',
                             count, line), end='')

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('microcode_bin')
    parser.add_argument('coverage_root')
    args = parser.parse_args()

    report(args.microcode_bin, args.coverage_root)
