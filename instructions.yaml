# S: 0 == no sign extension, 1 == sign extend 8-bit to 16-bit if W == 1
# W: 0 == byte, 1 == word
# D: 0 == source in reg, 1 == destination in reg
# V: 0 == shift/rotate count == 1, 1 == shift/rotate count in CL
# Z: 0 == repeat/loop while zero flag is clear, 1 == repat/loop while zero
#       flag is set
---
mov:
    # Register/memory to/from register
    - opc: 0x88
      opr: [Eb, Gb]
    - opc: 0x89
      opr: [Ev, Gv]
    - opc: 0x8a
      opr: [Gb, Eb]
    - opc: 0x8b
      opr: [Gv, Ev]
    # Immediate to register/memory
    - opc: 0xc6
      opr: [Eb, Ib]
      reg: 0
    - opc: 0xc7
      opr: [Ev, Iv]
      reg: 0
    # Immediate to register
    - opc: 0xb0
      opr: [AL, Ib]
    - opc: 0xb1
      opr: [CL, Ib]
    - opc: 0xb2
      opr: [DL, Ib]
    - opc: 0xb3
      opr: [BL, Ib]
    - opc: 0xb4
      opr: [AH, Ib]
    - opc: 0xb5
      opr: [CH, Ib]
    - opc: 0xb6
      opr: [DH, Ib]
    - opc: 0xb7
      opr: [BH, Ib]
    - opc: 0xb8
      opr: [AX, Iv]
    - opc: 0xb9
      opr: [CX, Iv]
    - opc: 0xba
      opr: [DX, Iv]
    - opc: 0xbb
      opr: [BX, Iv]
    - opc: 0xbc
      opr: [SP, Iv]
    - opc: 0xbd
      opr: [BP, Iv]
    - opc: 0xbe
      opr: [SI, Iv]
    - opc: 0xbf
      opr: [DI, Iv]
    # Memory to accumulator
    - opc: 0xa0
      opr: [AL, Ob]
    - opc: 0xa1
      opr: [AX, Ov]
    # Accumulator to memory
    - opc: 0xa2
      opr: [Ob, AL]
    - opc: 0xa3
      opr: [Ov, AX]
    # Register/memory to segment register
    - opc: 0x8e
      opr: [S, Ev]
    - opc: 0x8c
      opr: [Ev, S]
push:
    # Register/memory
    - opc: 0xff
      reg: 6
      opr: [Ev]
    # Register
    - opc: 0x50
      opr: [AX]
    - opc: 0x51
      opr: [CX]
    - opc: 0x52
      opr: [DX]
    - opc: 0x53
      opr: [BX]
    - opc: 0x54
      opr: [SP]
    - opc: 0x55
      opr: [BP]
    - opc: 0x56
      opr: [SI]
    - opc: 0x57
      opr: [DI]
    # Segment register
    - opc: 0x06
      opr: [ES]
    - opc: 0x0e
      opr: [CS]
    - opc: 0x16
      opr: [SS]
    - opc: 0x1e
      opr: [DS]
pop:
    # Register/memory
    - opc: 0x8f
      reg: 0
      opr: [Ev]
    # Register
    - opc: 0x58
      opr: [AX]
    - opc: 0x59
      opr: [CX]
    - opc: 0x5a
      opr: [DX]
    - opc: 0x5b
      opr: [BX]
    - opc: 0x5c
      opr: [SP]
    - opc: 0x5d
      opr: [BP]
    - opc: 0x5e
      opr: [SI]
    - opc: 0x5f
      opr: [DI]
    # Segment register
    - opc: 0x03
      opr: [ES]
    - opc: 0x0f
      opr: [CS]
    - opc: 0x13
      opr: [SS]
    - opc: 0x1f
      opr: [DS]
...
