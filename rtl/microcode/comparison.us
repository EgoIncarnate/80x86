#ifndef COMPARISON_US
#define COMPARISON_US

#define COMP_REGMEM_REG_8(opcode, alufunc, flags)                               \
.at opcode;                                                                     \
    modrm_start, mar_write, mar_wr_sel EA, width 8, segment DS,                 \
        ra_modrm_rm_reg, jmp_rm_reg_mem comp ## alufunc ## opcode ##_reg;       \
.auto_address;                                                                  \
comp ## alufunc ## opcode ## _reg:                                              \
    a_sel RA, b_sel RB, alu_op alufunc,                                         \
        update_flags flags, width 8, next_instruction;                          \
comp ## alufunc ## opcode ## _mem:                                              \
    segment DS, mem_read, width 8;                                              \
    a_sel MDR, b_sel RB, alu_op alufunc, update_flags flags,                    \
        width 8, next_instruction;

#define COMP_REGMEM_REG_16(opcode, alufunc, flags)                              \
.at opcode;                                                                     \
    modrm_start, mar_write, mar_wr_sel EA, segment DS,                          \
        ra_modrm_rm_reg, jmp_rm_reg_mem comp ## alufunc ## opcode ## _reg;      \
.auto_address;                                                                  \
comp ## alufunc ## opcode ## _reg:                                              \
    a_sel RA, b_sel RB, alu_op alufunc,                                         \
        update_flags flags, next_instruction;                                   \
comp ## alufunc ## opcode ## _mem:                                              \
    segment DS, mem_read;                                                       \
    a_sel MDR, b_sel RB, alu_op alufunc, update_flags flags,                    \
        next_instruction;

#define COMP_REG_REGMEM_8(opcode, alufunc, flags)                               \
.at opcode;                                                                     \
    modrm_start, mar_write, mar_wr_sel EA, width 8, segment DS,                 \
        ra_modrm_rm_reg, jmp_rm_reg_mem comp ## alufunc ## opcode ## _reg;      \
.auto_address;                                                                  \
comp ## alufunc ## opcode ## _reg:                                              \
    a_sel RA, b_sel RB, alu_op alufunc, update_flags flags, width 8,            \
        next_instruction;                                                       \
comp ## alufunc ## opcode ## _mem:                                              \
    segment DS, mem_read, width 8;                                              \
    a_sel MDR, b_sel RB, alu_op alufunc, update_flags flags,                    \
        width 8, next_instruction;

#define COMP_REG_REGMEM_16(opcode, alufunc, flags)                              \
.at opcode;                                                                     \
    modrm_start, mar_write, mar_wr_sel EA, segment DS,                          \
        ra_modrm_rm_reg, jmp_rm_reg_mem comp ## alufunc ## opcode ## _reg;      \
.auto_address;                                                                  \
comp ## alufunc ## opcode ## _reg:                                              \
    a_sel RA, b_sel RB, alu_op alufunc, update_flags flags,                     \
        next_instruction;                                                       \
comp ## alufunc ## opcode ## _mem:                                              \
    segment DS, mem_read;                                                       \
    a_sel MDR, b_sel RB, alu_op alufunc, update_flags flags,                    \
        next_instruction;

#define COMP_REGMEM_AL_8(opcode, alufunc, flags)                                \
.at opcode;                                                                     \
    read_immed, width 8, ra_sel AL, jmp comp ## alufunc ## opcode;              \
.auto_address;                                                                  \
comp ## alufunc ## opcode:                                                      \
    a_sel RA, b_sel IMMEDIATE, alu_op alufunc,                                  \
        update_flags flags, width 8, next_instruction;

#define COMP_REGMEM_AX_16(opcode, alufunc, flags)                               \
.at opcode;                                                                     \
    read_immed, ra_sel AX, jmp comp ## alufunc ## opcode;                       \
.auto_address;                                                                  \
comp ## alufunc ## opcode:                                                      \
    a_sel RA, b_sel IMMEDIATE, alu_op alufunc,                                  \
        update_flags flags, next_instruction;

#define COMP_80(alufunc, flags)                                                 \
comp ## alufunc ## 80_reg:                                                      \
    a_sel RA, b_sel IMMEDIATE, alu_op alufunc,                                  \
        update_flags flags, width 8, next_instruction;                          \
comp ## alufunc ## 80_mem:                                                      \
    segment DS, mem_read, width 8;                                              \
    a_sel MDR, b_sel IMMEDIATE, alu_op alufunc,                                 \
        update_flags flags, width 8, next_instruction;

#define COMP_81(alufunc, flags)                                                 \
comp ## alufunc ## 81_reg:                                                      \
    a_sel RA, b_sel IMMEDIATE, alu_op alufunc,                                  \
        update_flags flags, next_instruction;                                   \
comp ## alufunc ## 81_mem:                                                      \
    segment DS, mem_read;                                                       \
    a_sel MDR, b_sel IMMEDIATE, alu_op alufunc,                                 \
        update_flags flags, next_instruction;

#define COMP_82(alufunc, flags)                                                 \
comp ## alufunc ## 82_reg:                                                      \
    a_sel RA, b_sel IMMEDIATE, alu_op alufunc,                                  \
        width 8, update_flags flags, next_instruction;                          \
comp ## alufunc ## 82_mem:                                                      \
    width 8, segment DS, mem_read;                                              \
    a_sel MDR, b_sel IMMEDIATE, alu_op alufunc,                                 \
        width 8, update_flags flags, next_instruction;

#define COMP_83(alufunc, flags)                                                 \
comp ## alufunc ## 83_reg:                                                      \
    a_sel RA, b_sel IMMEDIATE, alu_op alufunc,                                  \
        update_flags flags, next_instruction;                                   \
comp ## alufunc ## 83_mem:                                                      \
    segment DS, mem_read;                                                       \
    a_sel MDR, b_sel IMMEDIATE, alu_op alufunc,                                 \
        update_flags flags, next_instruction;

#define COMP_F6(alufunc, flags)                                                 \
comp ## alufunc ## f6_reg:                                                      \
    a_sel RA, b_sel IMMEDIATE, alu_op alufunc,                                  \
        update_flags flags, width 8, next_instruction;                          \
comp ## alufunc ## f6_mem:                                                      \
    segment DS, mem_read, width 8;                                              \
    a_sel MDR, b_sel IMMEDIATE, alu_op alufunc,                                 \
        update_flags flags, width 8, next_instruction;

#define COMP_F7(alufunc, flags)                                                 \
comp ## alufunc ## f7_reg:                                                      \
    a_sel RA, b_sel IMMEDIATE, alu_op alufunc,                                  \
        update_flags flags, next_instruction;                                   \
comp ## alufunc ## f7_mem:                                                      \
    segment DS, mem_read;                                                       \
    a_sel MDR, b_sel IMMEDIATE, alu_op alufunc,                                 \
        update_flags flags, next_instruction;

#endif // COMPARISON_US
