// out imm8, al
.at 0xe6;
    width 8, read_immed, b_sel IMMEDIATE, alu_op SELB,
        mar_wr_sel Q, mar_write, jmp oute6, ra_sel AL;
.auto_address;
oute6:
    a_sel MAR, b_sel IMMEDIATE, immediate 0xff, alu_op AND, mar_write,
        mar_wr_sel Q;
    a_sel RA, alu_op SELA, mdr_write;
    width 8, io, mem_write, next_instruction;

// out imm16, al
.at 0xe7;
    width 8, read_immed, b_sel IMMEDIATE, alu_op SELB, mar_wr_sel Q,
        mar_write, jmp oute7;
.auto_address;
oute7:
    a_sel MAR, b_sel IMMEDIATE, immediate 0xff, alu_op AND, mar_write,
        mar_wr_sel Q;
    ra_sel AX;
    a_sel RA, alu_op SELA, mdr_write;
    io, mem_write, next_instruction;

// out dx, al
.at 0xee;
    width 8, ra_sel AL, jmp outee;
.auto_address;
outee:
    a_sel RA, alu_op SELA, mdr_write, ra_sel DX;
    a_sel RA, alu_op SELA, mar_write, mar_wr_sel Q;
    width 8, io, mem_write, next_instruction;

// out dx, ax
.at 0xef;
    ra_sel AX, jmp outef;
.auto_address;
outef:
    a_sel RA, alu_op SELA, mdr_write, ra_sel DX;
    a_sel RA, alu_op SELA, mar_write, mar_wr_sel Q;
    io, mem_write, next_instruction;

// in al, immed8
.at 0xe4;
    width 8, read_immed, b_sel IMMEDIATE, alu_op SELB,
        mar_wr_sel Q, mar_write, jmp ine4;
.auto_address;
ine4:
    a_sel MAR, b_sel IMMEDIATE, immediate 0xff, alu_op AND, mar_write,
        mar_wr_sel Q;
    width 8, io, mem_read;
    a_sel MDR, alu_op SELA, rd_sel_source MICROCODE_RD_SEL,
        rd_sel AL, reg_wr_en, width 8, next_instruction;

// in ax, immed16
.at 0xe5;
    width 8, read_immed, b_sel IMMEDIATE, alu_op SELB,
        mar_wr_sel Q, mar_write, jmp ine5;
.auto_address;
ine5:
    a_sel MAR, b_sel IMMEDIATE, immediate 0xff, alu_op AND, mar_write,
        mar_wr_sel Q;
    io, mem_read;
    a_sel MDR, alu_op SELA, rd_sel_source MICROCODE_RD_SEL,
        rd_sel AX, reg_wr_en, next_instruction;

// in dx, al
.at 0xec;
    ra_sel DX, jmp inec;
.auto_address;
inec:
    a_sel RA, alu_op SELA, mar_write, mar_wr_sel Q;
    width 8, io, mem_read;
    a_sel MDR, alu_op SELA, rd_sel_source MICROCODE_RD_SEL,
        rd_sel AL, reg_wr_en, width 8, next_instruction;

// in dx, ax
.at 0xed;
    ra_sel DX, jmp ined;
.auto_address;
ined:
    a_sel RA, alu_op SELA, mar_write, mar_wr_sel Q;
    io, mem_read;
    a_sel MDR, alu_op SELA, rd_sel_source MICROCODE_RD_SEL,
        rd_sel AL, reg_wr_en, next_instruction;

.at 0x6e;
    jmp outsb;

.auto_address;
outsb:
    ra_sel SI, jmp_if_not_rep outsb_no_rep;
    rb_cl;
outsb_rep_loop:
    ra_sel CX, a_sel RA, b_sel IMMEDIATE, immediate 0x0, alu_op SUB,
        jmp_rb_zero outsb_done;
    ra_sel SI, a_sel RA, b_sel IMMEDIATE, immediate 0x1, alu_op SUB,
        rd_sel_source MICROCODE_RD_SEL, rd_sel CX, reg_wr_en;
outsb_no_rep:
    ra_sel SI, a_sel RA, alu_op SELA, mar_wr_sel Q, mar_write, segment DS;
    a_sel RA, b_sel IMMEDIATE, immediate 0x1, alu_op NEXT,
        rd_sel_source MICROCODE_RD_SEL, rd_sel SI, reg_wr_en, segment DS;
    width 8, segment DS, mem_read;
    ra_sel DX;
    a_sel RA, alu_op SELA, mar_write, mar_wr_sel Q;
    width 8, io, mem_write, jmp_if_not_rep outsb_done;
    rb_cl, ext_int_yield, jmp outsb_rep_loop;
outsb_done:
    next_instruction;

.at 0x6f;
    jmp outsw;

.auto_address;
outsw:
    ra_sel SI, jmp_if_not_rep outsw_no_rep;
    rb_cl;
outsw_rep_loop:
    ra_sel CX, a_sel RA, b_sel IMMEDIATE, immediate 0x0, alu_op SUB,
        jmp_rb_zero outsw_done;
    ra_sel SI, a_sel RA, b_sel IMMEDIATE, immediate 0x1, alu_op SUB,
        rd_sel_source MICROCODE_RD_SEL, rd_sel CX, reg_wr_en;
outsw_no_rep:
    ra_sel SI, a_sel RA, alu_op SELA, mar_wr_sel Q, mar_write, segment DS;
    a_sel RA, b_sel IMMEDIATE, immediate 0x2, alu_op NEXT,
        rd_sel_source MICROCODE_RD_SEL, rd_sel SI, reg_wr_en, segment DS;
    segment DS, mem_read;
    ra_sel DX;
    a_sel RA, alu_op SELA, mar_write, mar_wr_sel Q;
    io, mem_write, jmp_if_not_rep outsw_done;
    rb_cl, ext_int_yield, jmp outsw_rep_loop;
outsw_done:
    next_instruction;

.at 0x6c;
    jmp insb;

.auto_address;
insb:
    ra_sel DX, jmp_if_not_rep insb_no_rep;
    rb_cl;
insb_rep_loop:
    ra_sel CX, a_sel RA, b_sel IMMEDIATE, immediate 0x0, alu_op SUB,
        jmp_rb_zero insb_done;
    ra_sel DI, a_sel RA, b_sel IMMEDIATE, immediate 0x1, alu_op SUB,
        rd_sel_source MICROCODE_RD_SEL, rd_sel CX, reg_wr_en, ra_sel DX;
insb_no_rep:
    a_sel RA, alu_op SELA, mar_wr_sel Q, mar_write;
    width 8, io, mem_read;
    ra_sel DI;
    a_sel RA, alu_op SELA, mar_write, mar_wr_sel Q, segment ES, segment_force;
    segment ES, segment_force, width 8, mem_write;
    ra_sel DI;
    a_sel RA, b_sel IMMEDIATE, immediate 0x1, alu_op NEXT,
        rd_sel_source MICROCODE_RD_SEL, rd_sel DI, reg_wr_en,
        jmp_if_not_rep insb_done;
    rb_cl, ext_int_yield, jmp insb_rep_loop;
insb_done:
    next_instruction;

.at 0x6d;
    jmp insw;

.auto_address;
insw:
    ra_sel DX, jmp_if_not_rep insw_no_rep;
    rb_cl;
insw_rep_loop:
    ra_sel CX, a_sel RA, b_sel IMMEDIATE, immediate 0x0, alu_op SUB,
        jmp_rb_zero insw_done;
    ra_sel DI, a_sel RA, b_sel IMMEDIATE, immediate 0x1, alu_op SUB,
        rd_sel_source MICROCODE_RD_SEL, rd_sel CX, reg_wr_en, ra_sel DX;
insw_no_rep:
    a_sel RA, alu_op SELA, mar_wr_sel Q, mar_write;
    io, mem_read;
    ra_sel DI;
    a_sel RA, alu_op SELA, mar_write, mar_wr_sel Q, segment ES, segment_force;
    segment ES, segment_force, mem_write;
    ra_sel DI;
    a_sel RA, b_sel IMMEDIATE, immediate 0x2, alu_op NEXT,
        rd_sel_source MICROCODE_RD_SEL, rd_sel DI, reg_wr_en,
        jmp_if_not_rep insw_done;
    rb_cl, ext_int_yield, jmp insw_rep_loop;
insw_done:
    next_instruction;
